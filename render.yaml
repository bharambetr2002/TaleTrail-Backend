services:
  # TaleTrail API Backend Service
  - type: web
    name: taletrail-api
    runtime: dotnet
    plan: free # Change to 'starter' or higher for production

    # Build Configuration
    buildCommand: |
      dotnet restore
      dotnet publish -c Release -o out --self-contained false

    # Start Command
    startCommand: dotnet out/TaleTrail.API.dll

    # Health Check
    healthCheckPath: /health

    # Environment Variables
    envVars:
      - key: ASPNETCORE_ENVIRONMENT
        value: Production

      - key: ASPNETCORE_URLS
        value: http://*:$PORT

      # Supabase Configuration (Set these in Render Dashboard)
      - key: SUPABASE_URL
        sync: false # Set manually in dashboard

      - key: SUPABASE_KEY
        sync: false # Set manually in dashboard

      - key: SUPABASE_JWT_SECRET
        sync: false # Set manually in dashboard

    # Auto-deployment
    autoDeploy: true
    branch: main # Change to your main branch name

    # Scaling (only for paid plans)
    # scaling:
    #   minInstances: 1
    #   maxInstances: 3
    #   targetCPUPercent: 70
    #   targetMemoryPercent: 80

    # Custom Headers for API
    headers:
      - path: /*
        name: X-Frame-Options
        value: DENY
      - path: /*
        name: X-Content-Type-Options
        value: nosniff
      - path: /*
        name: Referrer-Policy
        value: strict-origin-when-cross-origin

    # Routes and Rewrites
    routes:
      - type: rewrite
        source: /*
        destination: /index.html
# Optional: Database backup job (for paid plans)
# - type: cron
#   name: database-backup
#   schedule: "0 2 * * *"  # Daily at 2 AM
#   buildCommand: echo "Backup job"
#   startCommand: |
#     echo "Running database backup..."
#     # Add your backup script here
#   envVars:
#     - key: SUPABASE_URL
#       fromService:
#         type: web
#         name: taletrail-api
#         envVarKey: SUPABASE_URL
